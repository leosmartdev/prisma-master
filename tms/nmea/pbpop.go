// Code generated by parse_nmea; DO NOT EDIT
package nmea

import "github.com/jinzhu/copier"
import "reflect"
import "fmt"

func PopulateProtobuf(sentence Sentence) (*Nmea, error) {
	sen := &Nmea{}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ABK" {

		senstruct := sentence.(*ABK) //(*nmea.ABK)

		base := senstruct.BaseSentence
		core := senstruct.CoreABK

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Abk{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Abk = &pbNmeaStructure

		return sen, nil

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ABM" {

		senstruct := sentence.(*ABM) //(*nmea.ABM)

		base := senstruct.BaseSentence
		core := senstruct.CoreABM

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Abm{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Abm = &pbNmeaStructure

		return sen, nil

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ACA" {

		senstruct := sentence.(*ACA) //(*nmea.ACA)

		base := senstruct.BaseSentence
		core := senstruct.CoreACA

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Aca{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Aca = &pbNmeaStructure

		return sen, nil

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ACM" {

		senstruct := sentence.(*ACM) //(*nmea.ACM)

		base := senstruct.BaseSentence
		core := senstruct.CoreACM

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Acm{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Acm = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ADS" {

		senstruct := sentence.(*ADS) //(*nmea.ADS)

		base := senstruct.BaseSentence
		core := senstruct.CoreADS

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Ads{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Ads = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.AGA" {

		senstruct := sentence.(*AGA) //(*nmea.AGA)

		base := senstruct.BaseSentence
		core := senstruct.CoreAGA

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Aga{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Aga = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.AIR" {

		senstruct := sentence.(*AIR) //(*nmea.AIR)

		base := senstruct.BaseSentence
		core := senstruct.CoreAIR

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Air{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Air = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ALR" {

		senstruct := sentence.(*ALR) //(*nmea.ALR)

		base := senstruct.BaseSentence
		core := senstruct.CoreALR

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Alr{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Alr = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ASN" {

		senstruct := sentence.(*ASN) //(*nmea.ASN)

		base := senstruct.BaseSentence
		core := senstruct.CoreASN

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Asn{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Asn = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.BBM" {

		senstruct := sentence.(*BBM) //(*nmea.BBM)

		base := senstruct.BaseSentence
		core := senstruct.CoreBBM

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Bbm{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Bbm = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.BCG" {

		senstruct := sentence.(*BCG) //(*nmea.BCG)

		base := senstruct.BaseSentence
		core := senstruct.CoreBCG

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Bcg{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Bcg = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.BCL" {

		senstruct := sentence.(*BCL) //(*nmea.BCL)

		base := senstruct.BaseSentence
		core := senstruct.CoreBCL

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Bcl{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Bcl = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.DLM" {

		senstruct := sentence.(*DLM) //(*nmea.DLM)

		base := senstruct.BaseSentence
		core := senstruct.CoreDLM

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Dlm{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Dlm = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ECB" {

		senstruct := sentence.(*ECB) //(*nmea.ECB)

		base := senstruct.BaseSentence
		core := senstruct.CoreECB

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Ecb{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Ecb = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.FSR" {

		senstruct := sentence.(*FSR) //(*nmea.FSR)

		base := senstruct.BaseSentence
		core := senstruct.CoreFSR

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Fsr{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Fsr = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.GGA" {

		senstruct := sentence.(*GGA) //(*nmea.GGA)

		base := senstruct.BaseSentence
		core := senstruct.CoreGGA

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Gga{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Gga = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.GLL" {

		senstruct := sentence.(*GLL) //(*nmea.GLL)

		base := senstruct.BaseSentence
		core := senstruct.CoreGLL

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Gll{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Gll = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.NAK" {

		senstruct := sentence.(*NAK) //(*nmea.NAK)

		base := senstruct.BaseSentence
		core := senstruct.CoreNAK

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Nak{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Nak = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.OSD" {

		senstruct := sentence.(*OSD) //(*nmea.OSD)

		base := senstruct.BaseSentence
		core := senstruct.CoreOSD

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Osd{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Osd = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.RMC" {

		senstruct := sentence.(*RMC) //(*nmea.RMC)

		base := senstruct.BaseSentence
		core := senstruct.CoreRMC

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Rmc{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Rmc = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.RSD" {

		senstruct := sentence.(*RSD) //(*nmea.RSD)

		base := senstruct.BaseSentence
		core := senstruct.CoreRSD

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Rsd{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Rsd = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.RST" {

		senstruct := sentence.(*RST) //(*nmea.RST)

		base := senstruct.BaseSentence
		core := senstruct.CoreRST

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Rst{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Rst = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.SID" {

		senstruct := sentence.(*SID) //(*nmea.SID)

		base := senstruct.BaseSentence
		core := senstruct.CoreSID

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Sid{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Sid = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.SPO" {

		senstruct := sentence.(*SPO) //(*nmea.SPO)

		base := senstruct.BaseSentence
		core := senstruct.CoreSPO

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Spo{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Spo = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TFR" {

		senstruct := sentence.(*TFR) //(*nmea.TFR)

		base := senstruct.BaseSentence
		core := senstruct.CoreTFR

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Tfr{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Tfr = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TLL" {

		senstruct := sentence.(*TLL) //(*nmea.TLL)

		base := senstruct.BaseSentence
		core := senstruct.CoreTLL

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Tll{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Tll = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TSA" {

		senstruct := sentence.(*TSA) //(*nmea.TSA)

		base := senstruct.BaseSentence
		core := senstruct.CoreTSA

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Tsa{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Tsa = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TSP" {

		senstruct := sentence.(*TSP) //(*nmea.TSP)

		base := senstruct.BaseSentence
		core := senstruct.CoreTSP

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Tsp{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Tsp = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TSR" {

		senstruct := sentence.(*TSR) //(*nmea.TSR)

		base := senstruct.BaseSentence
		core := senstruct.CoreTSR

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Tsr{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Tsr = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TTM" {

		senstruct := sentence.(*TTM) //(*nmea.TTM)

		base := senstruct.BaseSentence
		core := senstruct.CoreTTM

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Ttm{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Ttm = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.TXT" {

		senstruct := sentence.(*TXT) //(*nmea.TXT)

		base := senstruct.BaseSentence
		core := senstruct.CoreTXT

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Txt{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Txt = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.VER" {

		senstruct := sentence.(*VER) //(*nmea.VER)

		base := senstruct.BaseSentence
		core := senstruct.CoreVER

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Ver{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Ver = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.VSI" {

		senstruct := sentence.(*VSI) //(*nmea.VSI)

		base := senstruct.BaseSentence
		core := senstruct.CoreVSI

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Vsi{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Vsi = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.VTG" {

		senstruct := sentence.(*VTG) //(*nmea.VTG)

		base := senstruct.BaseSentence
		core := senstruct.CoreVTG

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Vtg{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Vtg = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.ZDA" {

		senstruct := sentence.(*ZDA) //(*nmea.ZDA)

		base := senstruct.BaseSentence
		core := senstruct.CoreZDA

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Zda{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Zda = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.RS" {

		senstruct := sentence.(*RS) //(*nmea.RS)

		base := senstruct.BaseSentence
		core := senstruct.CoreRS

		sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
		sen.Sos = base.SOS
		sen.Talker = base.Talker
		pbNmeaStructure := Rs{}
		err := copier.Copy(&pbNmeaStructure, &core)
		if err != nil {
			return nil, err
		}

		sen.Rs = &pbNmeaStructure
		return sen, nil
	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13711" {

		senstruct := sentence.(*M13711) //(*nmea.GLL)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13711

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Position{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo // like before
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.Pos = &pbAIS
			sen.Vdo.M1371.Pos.RateOfTurn = int32(coreAIS.RateOfTurn) //reflected does not work because the nmea library defines it as int8

			return sen, nil

		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Position{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.Pos = &pbAIS
			sen.Vdm.M1371.Pos.RateOfTurn = int32(coreAIS.RateOfTurn) //reflected does not work because the nmea library defines it as int8

			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13712" {

		senstruct := sentence.(*M13712)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13712

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Position{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.Pos = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Position{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.Pos = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13713" {

		senstruct := sentence.(*M13713)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13713

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Position{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.Pos = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Position{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.Pos = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13714" {

		senstruct := sentence.(*M13714)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13714

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BaseStationReport{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.StationReport = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BaseStationReport{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.StationReport = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13715" {

		senstruct := sentence.(*M13715)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13715

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Static{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.StaticVoyage = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Static{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.StaticVoyage = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13716" {

		senstruct := sentence.(*M13716)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13716

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AddressedBinary{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.AddrBin = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AddressedBinary{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.AddrBin = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13717" {

		senstruct := sentence.(*M13717)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13717

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BinaryAck{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.BinAck = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BinaryAck{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.BinAck = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13718" {

		senstruct := sentence.(*M13718)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13718

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BinaryBroadcast{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.BinBcast = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BinaryBroadcast{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.BinBcast = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M13719" {

		senstruct := sentence.(*M13719)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM13719

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_SarAircraftPosition{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.AircraftPos = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_SarAircraftPosition{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.AircraftPos = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137110" {

		senstruct := sentence.(*M137110)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137110

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_DateInquiry{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.DateInq = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_DateInquiry{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.DateInq = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137111" {

		senstruct := sentence.(*M137111)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137111

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BaseStationReport{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.StationReport = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BaseStationReport{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.StationReport = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137112" {

		senstruct := sentence.(*M137112)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137112

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AddressedSafety{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.AddrSafety = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AddressedSafety{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.AddrSafety = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137113" {

		senstruct := sentence.(*M137113)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137113

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BinaryAck{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.BinAck = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_BinaryAck{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.BinAck = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137114" {

		senstruct := sentence.(*M137114)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137114

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_SafetyBroadcast{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.SafetyBcast = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_SafetyBroadcast{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.SafetyBcast = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137115" {

		senstruct := sentence.(*M137115)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137115

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Interrogation{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.Interrogation = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_Interrogation{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.Interrogation = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137116" {

		senstruct := sentence.(*M137116)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137116

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AssignedMode{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.AssignMode = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AssignedMode{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.AssignMode = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137117" {

		senstruct := sentence.(*M137117)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137117

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_GnssBinaryBroadcast{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.GnssBinBcast = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_GnssBinaryBroadcast{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.GnssBinBcast = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137118" {

		senstruct := sentence.(*M137118)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137118

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_PositionB{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.BPos = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_PositionB{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.BPos = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137119" {

		senstruct := sentence.(*M137119)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137119

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_PositionBExtended{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.BExtPos = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_PositionBExtended{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.BExtPos = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137120" {

		senstruct := sentence.(*M137120)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137120

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_DatalinkManagement{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.LinkMgt = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_DatalinkManagement{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.LinkMgt = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137121" {

		senstruct := sentence.(*M137121)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137121

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AidsToNav{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.AidToNav = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_AidsToNav{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw //"$GPGLL,3554.4456,N,528.9195,W,,,*5A"
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.AidToNav = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137122" {

		senstruct := sentence.(*M137122)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137122

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_ChannelManagement{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.ChanMgt = &pbAIS
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pbAIS := M1371_ChannelManagement{}

			err = copier.Copy(&pbAIS, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.ChanMgt = &pbAIS
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137123" {

		senstruct := sentence.(*M137123)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137123

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_GroupAssignment{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.GrpAssgin = &pos
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_GroupAssignment{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.GrpAssgin = &pos
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137124A" {

		senstruct := sentence.(*M137124A)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137124A

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_StaticDataA{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.StaticDataA = &pos
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_StaticDataA{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.StaticDataA = &pos
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137124B" {

		senstruct := sentence.(*M137124B)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137124B

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_StaticDataB{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.StaticDataB = &pos
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_StaticDataB{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.StaticDataB = &pos
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137125" {

		senstruct := sentence.(*M137125)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137125

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_SingleSlotBinary{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.SingleSlotBin = &pos
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_SingleSlotBinary{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.SingleSlotBin = &pos
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137126" {

		senstruct := sentence.(*M137126)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137126

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_MultiSlotBinary{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.MultiSlotBin = &pos
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_MultiSlotBinary{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.MultiSlotBin = &pos
			return sen, nil
		}

	}

	if reflect.TypeOf(sentence).Elem().String() == "nmea.M137127" {

		senstruct := sentence.(*M137127)

		base := senstruct.VDMO.BaseSentence
		core := senstruct.VDMO.CoreVDMO
		coreAIS := senstruct.CoreM137127

		if base.Format == "VDO" {

			vdmo := Vdo{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_LongRangePosition{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdo = &vdmo
			sen.Vdo.M1371 = &M1371{}
			sen.Vdo.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdo.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdo.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdo.M1371.LongRangePos = &pos
			return sen, nil
		} else if base.Format == "VDM" {

			vdmo := Vdm{}

			err := copier.Copy(&vdmo, &core)
			if err != nil {
				return nil, err
			}

			pos := M1371_LongRangePosition{}

			err = copier.Copy(&pos, &coreAIS)
			if err != nil {
				return nil, err
			}

			sen.OriginalString = base.Raw
			sen.Sos = base.SOS
			sen.Talker = base.Talker
			sen.Vdm = &vdmo // like before
			sen.Vdm.M1371 = &M1371{}
			sen.Vdm.M1371.MessageId = uint32(coreAIS.MessageID)
			sen.Vdm.M1371.RepeatIndicator = coreAIS.RepeatIndicator
			sen.Vdm.M1371.Mmsi = coreAIS.Mmsi
			sen.Vdm.M1371.LongRangePos = &pos
			return sen, nil
		}

	}

	return nil, fmt.Errorf("Sentence type %s not supported by protobuf", reflect.TypeOf(sentence).Elem().String())

}
