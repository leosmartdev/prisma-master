version: 0.2

env:
  variables:
    SRC_DIR: src/prisma
phases:
  install:
    commands:
      - export GOPATH=${HOME}/go && echo ${GOPATH}
      - export FILE_VERSION=$(cat ./VERSION.txt)
      - export TAG_VERSION=git tag --points-at HEAD | tr -d v
      - export VERSION=$([ ! -z $TAG_VERSION ] && echo $TAG_VERSION || echo $FILE_VERSION)
      - export PATH=/opt/go/bin:/root/go/bin:$PATH
      - curl --silent -O -L https://releases.hashicorp.com/consul/1.0.7/consul_1.0.7_linux_amd64.zip
      - unzip consul*.zip
      - mv consul /root/go/bin
      - apt-get install -y python-pip libcairo2 libpango-1.0-0 libpangocairo-1.0-0  libgdk-pixbuf2.0-0 libffi-dev shared-mime-info
      - pip install mkdocs
      - pip install mkdocs-material
      - pip install mkdocs-pdf-export-plugin
      - pip install pymdown-extensions
  pre_build:
    commands:
      - mkdir -p ${GOPATH}/${SRC_DIR} && cd ${GOPATH}/${SRC_DIR}
      - mv ${CODEBUILD_SRC_DIR}/* ${CODEBUILD_SRC_DIR}/.??* .
      - env
      - go env
      - go version
  build:
    commands:
      - echo Build started on `date`
      - make mod
      - make protobuf
      - make version
      - make compile
      - cp etc/aws/appspec/appspec.yml ${GOPATH}/src/prisma/
      - cp etc/aws/scripts/aws-application-stop.sh ${GOPATH}/src/prisma/
      - cp etc/aws/scripts/aws-after-install.sh ${GOPATH}/src/prisma/
      - cp etc/aws/scripts/aws-validate-service.sh ${GOPATH}/src/prisma/
      - make docs
  post_build:
    commands:
      - echo Build completed on `date`
      - printenv CODEBUILD_INITIATOR > etc/aws.txt

artifacts:
  files:
    - appspec.yml
    - ${GOPATH}/bin/t*
    - tests/**/*
    - vagrant/**/*
    - etc/**/*
    - build/proto/python/prisma/**/*
    - build/documentation_site/**/*
    - tms/cmd/tools/tdemo/requirements.txt
  base-directory: ${GOPATH}/src/prisma
  name: ${VERSION}-$(date +%Y%m%d-%H%M%S)

cache:
  paths:
    - '/root/.glide/**/*'
