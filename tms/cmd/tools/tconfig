#!/usr/bin/python

import argparse
import json

import requests
import time
from expects import *

requests.packages.urllib3.disable_warnings()

HOST = 'demo.mcmurdo.io'
AUTH = 'https://' + HOST + ':8181/api/v2/auth'
WEB = 'https://' + HOST + ':8080/api/v2'
CONFIG = 'http://' + HOST + ':8081/api/v2/config.json'
HEADERS = {'Content-Type': 'application/json'}


class Session(requests.Session):
    def request(self, method, url, **kwargs):
        return super().request(method, url, verify=False, **kwargs)


# Instantiate the parser
parser = argparse.ArgumentParser(description='Getting and setting the config')
parser.add_argument('-u', help='admin')
parser.add_argument('-p', help='admin')
parser.add_argument('-set', action='store_true', help='')
parser.add_argument('-get', action='store_true', help='')
parser.add_argument('-file', help='/path/to/config.json')


def main():
    args = parser.parse_args()
    session = get_session(args.u, args.p)

    if args.get:
        get_config(session)

    if args.set:
        pfile = args.file
        if pfile != None:
            with open(pfile, "r") as f:
                set_config(session, f.read())


def get_session(name, password):
    session = Session()
    rsp = session.post(AUTH + '/session', json.dumps({
        'userName': name,
        'token': password,
    }), headers=HEADERS)
    expect(rsp.status_code).to(equal(200))
    return session


def get_config(session):
    rsp = session.get(CONFIG, headers=HEADERS)
    expect(rsp.status_code).to(equal(200))
    obj = json.loads(rsp.text)
    ts = int(time.time())
    text_file = open("config_" + str(ts) + ".json", "w")
    text_file.write(rsp.text)
    text_file.close()


def set_config(session, config):
    rsp = session.put(WEB + '/config', config, headers=HEADERS)
    expect(rsp.status_code).to(equal(200))


if __name__ == "__main__":
    main()
